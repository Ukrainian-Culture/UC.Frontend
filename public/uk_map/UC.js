/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const { nodes, materials } = useGLTF('/UC.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['1_lviv'].geometry} material={materials['1_lviv']} position={[-1.79, 0.84, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['2_volun'].geometry} material={materials['2_volun']} position={[-1.58, 1.38, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['3_rivne'].geometry} material={materials['3_rivne']} position={[-1.28, 1.34, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['4_ternopil'].geometry} material={materials['4_ternopil']} position={[-1.4, 0.83, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['5_ivano-frankivsk'].geometry} material={materials['5_ivano-frankivsk']} position={[-1.67, 0.52, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['6_zakarpattya'].geometry} material={materials['6_zakarpattya']} position={[-2, 0.44, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['7_chernivtsi'].geometry} material={materials['7_chernivtsi']} position={[-1.27, 0.41, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['8_hmelnytsk'].geometry} material={materials['8_hmelnytsk']} position={[-1.09, 0.83, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['9_jytomyr'].geometry} material={materials['9_jytomyr']} position={[-0.74, 1.18, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['10_kyiv'].geometry} material={materials['10_kyiv']} position={[-0.26, 1.07, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['11_vinnytsa'].geometry} material={materials['11_vinnytsa']} position={[-0.67, 0.56, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['12_odessa'].geometry} material={materials['12_odessa']} position={[-0.46, -0.1, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['13_mikolaiv'].geometry} material={materials['13_mikolaiv']} position={[0.13, 0.1, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['14_kirovograd'].geometry} material={materials['14_kirovograd']} position={[0.17, 0.51, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['15_cherkasy'].geometry} material={materials['15_cherkasy']} position={[-0.02, 0.75, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['16_chernigiv'].geometry} material={materials['16_chernigiv']} position={[0.17, 1.46, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['17_poltava'].geometry} material={materials['17_poltava']} position={[0.55, 0.86, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['18_dnipro'].geometry} material={materials['18_dnipro']} position={[0.83, 0.4, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['19_herson'].geometry} material={materials['19_herson']} position={[0.5, -0.11, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['20_krym'].geometry} material={materials['20_krym']} position={[0.75, -0.56, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['21_zaporizzya'].geometry} material={materials['21_zaporizzya']} position={[1.09, 0.04, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['22_sumy'].geometry} material={materials['22_sumy']} position={[0.71, 1.36, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['23_harkiv'].geometry} material={materials['23_harkiv']} position={[1.2, 0.85, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['24_donetsk'].geometry} material={materials['24_donetsk']} position={[1.51, 0.33, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes['25_lugansk'].geometry} material={materials['25_lugansk']} position={[1.88, 0.66, -0.35]} rotation={[Math.PI / 2, 0, 0]} />
    </group>
  )
}

useGLTF.preload('/UC.glb')
